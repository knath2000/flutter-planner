// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.7.2.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_9", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C, D, E,
  B = {
    SingleChildScrollView$(child, padding) {
      return new B.SingleChildScrollView(padding, child, null);
    },
    SingleChildScrollView: function SingleChildScrollView(t0, t1, t2) {
      this.padding = t0;
      this.child = t1;
      this.key = t2;
    },
    SingleChildScrollView_build_closure: function SingleChildScrollView_build_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.axisDirection = t2;
    },
    _SingleChildViewport: function _SingleChildViewport(t0, t1, t2, t3, t4) {
      var _ = this;
      _.axisDirection = t0;
      _.offset = t1;
      _.clipBehavior = t2;
      _.child = t3;
      _.key = t4;
    },
    _SingleChildViewportElement: function _SingleChildViewportElement(t0, t1) {
      var _ = this;
      _._slot = _._notificationTree = _._framework$_parent = _._ancestorRenderObjectElement = _._renderObject = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._parentBuildScope = _._framework$_owner = null;
      _._lifecycleState = t1;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    _RenderSingleChildViewport: function _RenderSingleChildViewport(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._single_child_scroll_view$_axisDirection = t0;
      _._single_child_scroll_view$_offset = t1;
      _._single_child_scroll_view$_clipBehavior = t2;
      _._single_child_scroll_view$_clipRectLayer = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderSingleChildViewport_paint_paintContents: function _RenderSingleChildViewport_paint_paintContents(t0, t1) {
      this.$this = t0;
      this.paintOffset = t1;
    },
    _RenderSingleChildViewport_hitTestChildren_closure: function _RenderSingleChildViewport_hitTestChildren_closure(t0) {
      this.$this = t0;
    },
    __RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin: function __RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin() {
    },
    __SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin: function __SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin() {
    },
    __SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin_ViewportElementMixin: function __SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin_ViewportElementMixin() {
    }
  };
  A = holdersList[0];
  C = holdersList[2];
  D = holdersList[11];
  E = holdersList[12];
  B = hunkHelpers.updateHolder(holdersList[9], B);
  B.SingleChildScrollView.prototype = {
    build$1(context) {
      var t2, effectivePrimary, scrollController, scrollable, _null = null, t1 = {},
        axisDirection = D.getAxisDirectionFromAxisReverseAndDirectionality(context, C.Axis_1, false),
        contents = this.child;
      t1.contents = contents;
      t2 = this.padding;
      if (t2 != null)
        t1.contents = new A.Padding(t2, contents, _null);
      effectivePrimary = D.PrimaryScrollController_shouldInherit(context, C.Axis_1);
      scrollController = effectivePrimary ? A.PrimaryScrollController_maybeOf(context) : _null;
      scrollable = E.Scrollable$(axisDirection, C.Clip_1, scrollController, C.DragStartBehavior_1, false, C.HitTestBehavior_1, _null, _null, _null, _null, _null, new B.SingleChildScrollView_build_closure(t1, this, axisDirection));
      return effectivePrimary && scrollController != null ? D.PrimaryScrollController$none(scrollable) : scrollable;
    }
  };
  B._SingleChildViewport.prototype = {
    createRenderObject$1(context) {
      var t1 = new B._RenderSingleChildViewport(this.axisDirection, this.offset, this.clipBehavior, A.LayerHandle$(), null, new A._LayoutCacheStorage(), A.LayerHandle$());
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      renderObject.set$axisDirection(this.axisDirection);
      renderObject.set$offset(this.offset);
      t1 = this.clipBehavior;
      if (t1 !== renderObject._single_child_scroll_view$_clipBehavior) {
        renderObject._single_child_scroll_view$_clipBehavior = t1;
        renderObject.markNeedsPaint$0();
        renderObject.markNeedsSemanticsUpdate$0();
      }
    },
    createElement$0() {
      return new B._SingleChildViewportElement(this, C._ElementLifecycle_0);
    }
  };
  B._SingleChildViewportElement.prototype = {};
  B._RenderSingleChildViewport.prototype = {
    set$axisDirection(value) {
      if (value === this._single_child_scroll_view$_axisDirection)
        return;
      this._single_child_scroll_view$_axisDirection = value;
      this.markNeedsLayout$0();
    },
    set$offset(value) {
      var _this = this,
        t1 = _this._single_child_scroll_view$_offset;
      if (value === t1)
        return;
      if (_this._object$_owner != null)
        t1.removeListener$1(_this.get$_hasScrolled());
      _this._single_child_scroll_view$_offset = value;
      if (_this._object$_owner != null)
        value.addListener$1(_this.get$_hasScrolled());
      _this.markNeedsLayout$0();
    },
    _hasScrolled$0() {
      this.markNeedsPaint$0();
      this.markNeedsSemanticsUpdate$0();
    },
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.ParentData))
        child.parentData = new A.ParentData();
    },
    attach$1(owner) {
      this.super$__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin$attach(owner);
      this._single_child_scroll_view$_offset.addListener$1(this.get$_hasScrolled());
    },
    detach$0() {
      this._single_child_scroll_view$_offset.removeListener$1(this.get$_hasScrolled());
      this.super$__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin$detach();
    },
    get$isRepaintBoundary() {
      return true;
    },
    get$_viewportExtent() {
      switch (A.axisDirectionToAxis(this._single_child_scroll_view$_axisDirection).index) {
        case 0:
          var t1 = this.get$size()._dx;
          break;
        case 1:
          t1 = this.get$size()._dy;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$_single_child_scroll_view$_maxScrollExtent() {
      var _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 == null)
        return 0;
      switch (A.axisDirectionToAxis(_this._single_child_scroll_view$_axisDirection).index) {
        case 0:
          t1 = t1.get$size()._dx - _this.get$size()._dx;
          break;
        case 1:
          t1 = t1.get$size()._dy - _this.get$size()._dy;
          break;
        default:
          t1 = null;
      }
      return Math.max(0, A.checkNum(t1));
    },
    _getInnerConstraints$1(constraints) {
      var t1;
      switch (A.axisDirectionToAxis(this._single_child_scroll_view$_axisDirection).index) {
        case 0:
          t1 = new A.BoxConstraints(0, 1 / 0, constraints.minHeight, constraints.maxHeight);
          break;
        case 1:
          t1 = new A.BoxConstraints(constraints.minWidth, constraints.maxWidth, 0, 1 / 0);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    computeMinIntrinsicWidth$1(height) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1._computeIntrinsics$3(C._IntrinsicDimension_0, height, t1.get$computeMinIntrinsicWidth());
      return t1 == null ? 0 : t1;
    },
    computeMaxIntrinsicWidth$1(height) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1._computeIntrinsics$3(C._IntrinsicDimension_1, height, t1.get$computeMaxIntrinsicWidth());
      return t1 == null ? 0 : t1;
    },
    computeMinIntrinsicHeight$1(width) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1._computeIntrinsics$3(C._IntrinsicDimension_2, width, t1.get$computeMinIntrinsicHeight());
      return t1 == null ? 0 : t1;
    },
    computeMaxIntrinsicHeight$1(width) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1._computeIntrinsics$3(C._IntrinsicDimension_3, width, t1.get$computeMaxIntrinsicHeight());
      return t1 == null ? 0 : t1;
    },
    computeDryLayout$1(constraints) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 == null)
        return new A.Size(A.clampDouble(0, constraints.minWidth, constraints.maxWidth), A.clampDouble(0, constraints.minHeight, constraints.maxHeight));
      return constraints.constrain$1(t1._computeIntrinsics$3(C.C__DryLayout, this._getInnerConstraints$1(constraints), t1.get$_box$_computeDryLayout()));
    },
    performLayout$0() {
      var t2, t3, _this = this,
        constraints = type$.BoxConstraints._as(A.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 == null)
        _this._box$_size = new A.Size(A.clampDouble(0, constraints.minWidth, constraints.maxWidth), A.clampDouble(0, constraints.minHeight, constraints.maxHeight));
      else {
        t1.layout$2$parentUsesSize(_this._getInnerConstraints$1(constraints), true);
        _this._box$_size = constraints.constrain$1(_this.RenderObjectWithChildMixin__child.get$size());
      }
      t1 = _this._single_child_scroll_view$_offset._pixels;
      if (t1 != null)
        if (t1 > _this.get$_single_child_scroll_view$_maxScrollExtent()) {
          t1 = _this._single_child_scroll_view$_offset;
          t2 = _this.get$_single_child_scroll_view$_maxScrollExtent();
          t3 = _this._single_child_scroll_view$_offset._pixels;
          t3.toString;
          t1.correctBy$1(t2 - t3);
        } else {
          t1 = _this._single_child_scroll_view$_offset;
          t2 = t1._pixels;
          t2.toString;
          if (t2 < 0)
            t1.correctBy$1(0 - t2);
        }
      _this._single_child_scroll_view$_offset.applyViewportDimension$1(_this.get$_viewportExtent());
      _this._single_child_scroll_view$_offset.applyContentDimensions$2(0, _this.get$_single_child_scroll_view$_maxScrollExtent());
    },
    _paintOffsetForPosition$1(position) {
      var t1, _this = this;
      switch (_this._single_child_scroll_view$_axisDirection.index) {
        case 0:
          t1 = new A.Offset(0, position - _this.RenderObjectWithChildMixin__child.get$size()._dy + _this.get$size()._dy);
          break;
        case 3:
          t1 = new A.Offset(position - _this.RenderObjectWithChildMixin__child.get$size()._dx + _this.get$size()._dx, 0);
          break;
        case 1:
          t1 = new A.Offset(-position, 0);
          break;
        case 2:
          t1 = new A.Offset(0, -position);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    _shouldClipAtPaintOffset$1(paintOffset) {
      var t1, t2, _this = this;
      switch (_this._single_child_scroll_view$_clipBehavior.index) {
        case 0:
          return false;
        case 1:
        case 2:
        case 3:
          t1 = paintOffset._dx;
          if (!(t1 < 0)) {
            t2 = paintOffset._dy;
            t1 = t2 < 0 || t1 + _this.RenderObjectWithChildMixin__child.get$size()._dx > _this.get$size()._dx || t2 + _this.RenderObjectWithChildMixin__child.get$size()._dy > _this.get$size()._dy;
          } else
            t1 = true;
          return t1;
      }
    },
    paint$2(context, offset) {
      var t1, paintOffset, t2, t3, t4, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        t1 = _this._single_child_scroll_view$_offset._pixels;
        t1.toString;
        paintOffset = _this._paintOffsetForPosition$1(t1);
        t1 = new B._RenderSingleChildViewport_paint_paintContents(_this, paintOffset);
        t2 = _this._single_child_scroll_view$_clipRectLayer;
        if (_this._shouldClipAtPaintOffset$1(paintOffset)) {
          t3 = _this.__RenderObject__needsCompositing_A;
          t3 === $ && A.throwUnnamedLateFieldNI();
          t4 = _this.get$size();
          t2.set$layer(context.pushClipRect$6$clipBehavior$oldLayer(t3, offset, new A.Rect(0, 0, 0 + t4._dx, 0 + t4._dy), t1, _this._single_child_scroll_view$_clipBehavior, t2._layer));
        } else {
          t2.set$layer(null);
          t1.call$2(context, offset);
        }
      }
    },
    dispose$0() {
      this._single_child_scroll_view$_clipRectLayer.set$layer(null);
      this.super$RenderObject$dispose();
    },
    applyPaintTransform$2(child, transform) {
      var paintOffset,
        t1 = this._single_child_scroll_view$_offset._pixels;
      t1.toString;
      paintOffset = this._paintOffsetForPosition$1(t1);
      transform.translate$2(paintOffset._dx, paintOffset._dy);
    },
    describeApproximatePaintClip$1(child) {
      var _this = this,
        t1 = _this._single_child_scroll_view$_offset._pixels;
      t1.toString;
      t1 = _this._shouldClipAtPaintOffset$1(_this._paintOffsetForPosition$1(t1));
      if (t1) {
        t1 = _this.get$size();
        return new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      }
      return null;
    },
    hitTestChildren$2$position(result, position) {
      var t1, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        t1 = _this._single_child_scroll_view$_offset._pixels;
        t1.toString;
        return result.addWithPaintOffset$3$hitTest$offset$position(new B._RenderSingleChildViewport_hitTestChildren_closure(_this), _this._paintOffsetForPosition$1(t1), position);
      }
      return false;
    },
    getOffsetToReveal$4$axis$rect(target, alignment, axis, rect) {
      var t1, bounds, contentSize, _0_1, leadingScrollOffset, targetMainAxisExtent, _0_2, _0_3, mainAxisExtent, targetOffset, _this = this, _null = null;
      A.axisDirectionToAxis(_this._single_child_scroll_view$_axisDirection);
      if (rect == null)
        rect = target.get$paintBounds();
      if (!(target instanceof A.RenderBox)) {
        t1 = _this._single_child_scroll_view$_offset._pixels;
        t1.toString;
        return new E.RevealedOffset(t1, rect);
      }
      bounds = A.MatrixUtils_transformRect(target.getTransformTo$1(_this.RenderObjectWithChildMixin__child), rect);
      contentSize = _this.RenderObjectWithChildMixin__child.get$size();
      switch (_this._single_child_scroll_view$_axisDirection.index) {
        case 0:
          t1 = bounds.bottom;
          t1 = new A._Record_3(_this.get$size()._dy, contentSize._dy - t1, t1 - bounds.top);
          break;
        case 3:
          t1 = bounds.right;
          t1 = new A._Record_3(_this.get$size()._dx, contentSize._dx - t1, t1 - bounds.left);
          break;
        case 1:
          t1 = bounds.left;
          t1 = new A._Record_3(_this.get$size()._dx, t1, bounds.right - t1);
          break;
        case 2:
          t1 = bounds.top;
          t1 = new A._Record_3(_this.get$size()._dy, t1, bounds.bottom - t1);
          break;
        default:
          t1 = _null;
      }
      _0_1 = t1._0;
      leadingScrollOffset = _null;
      targetMainAxisExtent = _null;
      _0_2 = t1._1;
      _0_3 = t1._2;
      targetMainAxisExtent = _0_3;
      leadingScrollOffset = _0_2;
      mainAxisExtent = _0_1;
      targetOffset = leadingScrollOffset - (mainAxisExtent - targetMainAxisExtent) * alignment;
      return new E.RevealedOffset(targetOffset, bounds.shift$1(_this._paintOffsetForPosition$1(targetOffset)));
    },
    getOffsetToReveal$3$rect(target, alignment, rect) {
      return this.getOffsetToReveal$4$axis$rect(target, alignment, null, rect);
    },
    showOnScreen$4$curve$descendant$duration$rect(curve, descendant, duration, rect) {
      this.super$RenderObject$showOnScreen(curve, null, duration, D.RenderViewportBase_showInViewport(curve, descendant, duration, this._single_child_scroll_view$_offset, rect, this));
    },
    showOnScreen$0() {
      return this.showOnScreen$4$curve$descendant$duration$rect(C.Cubic_glB, null, C.Duration_0, null);
    },
    showOnScreen$1$rect(rect) {
      return this.showOnScreen$4$curve$descendant$duration$rect(C.Cubic_glB, null, C.Duration_0, rect);
    },
    showOnScreen$3$curve$duration$rect(curve, duration, rect) {
      return this.showOnScreen$4$curve$descendant$duration$rect(curve, null, duration, rect);
    },
    showOnScreen$2$descendant$rect(descendant, rect) {
      return this.showOnScreen$4$curve$descendant$duration$rect(C.Cubic_glB, descendant, C.Duration_0, rect);
    },
    describeSemanticsClip$1(child) {
      var remainingOffset, t3, _this = this,
        t1 = _this.get$_single_child_scroll_view$_maxScrollExtent(),
        t2 = _this._single_child_scroll_view$_offset._pixels;
      t2.toString;
      remainingOffset = t1 - t2;
      switch (_this._single_child_scroll_view$_axisDirection.index) {
        case 0:
          _this.get$size();
          _this.get$size();
          t1 = _this.get$size();
          t2 = _this.get$size();
          t3 = _this._single_child_scroll_view$_offset._pixels;
          t3.toString;
          return new A.Rect(0, 0 - remainingOffset, 0 + t1._dx, 0 + t2._dy + t3);
        case 1:
          _this.get$size();
          t1 = _this._single_child_scroll_view$_offset._pixels;
          t1.toString;
          _this.get$size();
          return new A.Rect(0 - t1, 0, 0 + _this.get$size()._dx + remainingOffset, 0 + _this.get$size()._dy);
        case 2:
          _this.get$size();
          _this.get$size();
          t1 = _this._single_child_scroll_view$_offset._pixels;
          t1.toString;
          return new A.Rect(0, 0 - t1, 0 + _this.get$size()._dx, 0 + _this.get$size()._dy + remainingOffset);
        case 3:
          _this.get$size();
          _this.get$size();
          t1 = _this.get$size();
          t2 = _this._single_child_scroll_view$_offset._pixels;
          t2.toString;
          return new A.Rect(0 - remainingOffset, 0, 0 + t1._dx + t2, 0 + _this.get$size()._dy);
      }
    },
    $isRenderAbstractViewport: 1
  };
  B.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0() {
      this.super$RenderObject$detach();
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0();
    }
  };
  B.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin.prototype = {};
  B.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin_ViewportElementMixin.prototype = {};
  var typesOffset = hunkHelpers.updateTypes(["double(double)", "_SingleChildViewport(BuildContext,ViewportOffset)", "~()", "~({curve:Curve,descendant:RenderObject?,duration:Duration,rect:Rect?})"]);
  B.SingleChildScrollView_build_closure.prototype = {
    call$2(context, offset) {
      return new B._SingleChildViewport(this.axisDirection, offset, C.Clip_1, this._box_0.contents, null);
    },
    $signature: typesOffset + 1
  };
  B._RenderSingleChildViewport_paint_paintContents.prototype = {
    call$2(context, offset) {
      var t1 = this.$this.RenderObjectWithChildMixin__child;
      t1.toString;
      context.paintChild$2(t1, offset.$add(0, this.paintOffset));
    },
    $signature: 18
  };
  B._RenderSingleChildViewport_hitTestChildren_closure.prototype = {
    call$2(result, transformed) {
      return this.$this.RenderObjectWithChildMixin__child.hitTest$2$position(result, transformed);
    },
    $signature: 16
  };
  (function aliases() {
    var _ = B.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin.prototype;
    _.super$__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin$attach = _.attach$1;
    _.super$__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin$detach = _.detach$0;
  })();
  (function installTearOffs() {
    var _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance = hunkHelpers.installInstanceTearOff;
    var _;
    _instance_0_u(_ = B._RenderSingleChildViewport.prototype, "get$_hasScrolled", "_hasScrolled$0", 2);
    _instance_1_u(_, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 0);
    _instance(_, "get$showOnScreen", 0, 0, null, ["call$4$curve$descendant$duration$rect", "call$0", "call$1$rect", "call$3$curve$duration$rect", "call$2$descendant$rect"], ["showOnScreen$4$curve$descendant$duration$rect", "showOnScreen$0", "showOnScreen$1$rect", "showOnScreen$3$curve$duration$rect", "showOnScreen$2$descendant$rect"], 3, 0, 0);
  })();
  (function inheritance() {
    var _mixinHard = hunkHelpers.mixinHard,
      _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(B.SingleChildScrollView, A.StatelessWidget);
    _inheritMany(A.Closure2Args, [B.SingleChildScrollView_build_closure, B._RenderSingleChildViewport_paint_paintContents, B._RenderSingleChildViewport_hitTestChildren_closure]);
    _inherit(B._SingleChildViewport, A.SingleChildRenderObjectWidget);
    _inherit(B.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin, A.SingleChildRenderObjectElement);
    _inherit(B.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin_ViewportElementMixin, B.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin);
    _inherit(B._SingleChildViewportElement, B.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin_ViewportElementMixin);
    _inherit(B.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin, A.RenderBox);
    _inherit(B._RenderSingleChildViewport, B.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin);
    _mixinHard(B.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin, A.RenderObjectWithChildMixin);
    _mixin(B.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin, A.NotifiableElementMixin);
    _mixin(B.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin_ViewportElementMixin, D.ViewportElementMixin);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"_SingleChildViewport":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"SingleChildScrollView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SingleChildViewportElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"_RenderSingleChildViewport":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderAbstractViewport":[],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[]}}'));
  var type$ = {
    BoxConstraints: A.findType("BoxConstraints")
  };
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_9", e: "endPart", h: h});
})($__dart_deferred_initializers__, "6GommAVUGEVTbvqLTLEgGFd/sX4=");
;